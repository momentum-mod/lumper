<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:views="clr-namespace:Lumper.UI.Views.Pages.EntityEditor"
             xmlns:vm="clr-namespace:Lumper.UI.ViewModels.Pages.EntityEditor"
             xmlns:materialIcons="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
             xmlns:entity="clr-namespace:Lumper.UI.ViewModels.Shared.Entity"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="Lumper.UI.Views.Pages.EntityEditor.EntityEditorView"
             x:DataType="vm:EntityEditorViewModel">

  <Grid RowDefinitions="Auto, Auto, Auto, Auto, Auto, *" Margin="8">
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="360" MinWidth="260" />
      <ColumnDefinition Width="2" />
      <ColumnDefinition Width="*" MinWidth="400" />
    </Grid.ColumnDefinitions>
    <Grid Grid.Column="0" Grid.Row="0" ColumnDefinitions="*, 6, Auto" Margin="0 0 0 4">
      <TextBox Grid.Column="0" Text="{Binding Filters.Classname}" Watermark="Entity Type (classname)" />
      <materialIcons:MaterialIcon Grid.Column="2" Kind="HelpBox" Width="24" Height="24" Foreground="DarkGray">
        <ToolTip.Tip>
          <StackPanel>
            <TextBlock FontSize="18" FontWeight="Medium">Entity Type / Key / Value</TextBlock>
            <TextBlock LineHeight="24">
              Multiple inputs can be provided at once separated by commas, and entities/properties will match if any
              value matches. Use <Run FontFamily="{StaticResource Monospace}">-</Run> to exclude on the front of a value
              to exclude that value.
              <LineBreak />
              <Run FontStyle="Italic" FontWeight="Medium">Example</Run>
              <LineBreak />
              <Run FontFamily="{StaticResource Monospace}">light, -light_spot</Run> entity type will match any entity
              with <Run FontFamily="{StaticResource Monospace}">light</Run> in the classname, but not
              <Run FontFamily="{StaticResource Monospace}">light_spot</Run>.
            </TextBlock>
            <TextBlock FontSize="18" FontWeight="Medium">Spherical Region</TextBlock>
            <TextBlock LineHeight="24">
              Matches entities within a spherical region based on their origin.
              <LineBreak />
              <Run FontStyle="Italic" FontWeight="Medium">Example</Run>
              <LineBreak />
              Region: <Run FontFamily="{StaticResource Monospace}">0 0 0</Run>, Radius:
              <Run FontFamily="{StaticResource Monospace}">0</Run>
              Will match any entity who's origin is within 1000 units from X = 0, Y = 0, Z = 0.
            </TextBlock>
            <TextBlock FontSize="18" FontWeight="Medium">Wildcards</TextBlock>
            <TextBlock LineHeight="24">
              <Run FontFamily="{StaticResource Monospace}">*</Run> (greedy) and
              <Run FontFamily="{StaticResource Monospace}">?</Run> (non-greedy) wildcards are supported. Use
              <Run FontFamily="{StaticResource Monospace}">\</Run> to escape.
            </TextBlock>
            <TextBlock FontSize="14" FontWeight="Medium">Wildcard Wrapping</TextBlock>
            <TextBlock LineHeight="24">
              Applies a trailing wildcard to all string expressions.
              <LineBreak />
              If checked, <Run FontFamily="{StaticResource Monospace}">light</Run> will also match
              <Run FontFamily="{StaticResource Monospace}">light_spot</Run>,
              <Run FontFamily="{StaticResource Monospace}">light_environment</Run>, etc...
              <LineBreak />
              If unchecked, it will only match <Run FontFamily="{StaticResource Monospace}">light</Run>.
            </TextBlock>
          </StackPanel>
        </ToolTip.Tip>
      </materialIcons:MaterialIcon>
    </Grid>
    <Grid Grid.Column="0" Grid.Row="1" Margin="0 0 0 4" ColumnDefinitions="1*, 4, 1*">
      <TextBox Grid.Column="0" Text="{Binding Filters.Key}" Watermark="Key" />
      <TextBox Grid.Column="2" Text="{Binding Filters.Value}" Watermark="Value" />
    </Grid>
    <Grid Grid.Column="0" Grid.Row="2" Margin="0, 0, 0, 4" ColumnDefinitions="3*, 4, 1*">
      <ToolTip.Tip>
        <StackPanel>
          <TextBlock FontStyle="Italic" FontWeight="Medium">Example</TextBlock>
          <TextBlock>
            <Run FontWeight="Medium">In Spherical Region</Run>
            <Run FontFamily="{StaticResource Monospace}">0 0 0</Run>
          </TextBlock>
          <TextBlock>
            <Run FontWeight="Medium">Radius</Run>
            <Run FontFamily="{StaticResource Monospace}">0</Run>
          </TextBlock>
          <TextBlock>Will match any entity who's origin is within 1000 units from X = 0, Y = 0, Z = 0.</TextBlock>
        </StackPanel>
      </ToolTip.Tip>
      <TextBox Grid.Column="0" Text="{Binding Filters.SpherePosition}" Watermark="In Spherical Region (X Y Z)" />
      <TextBox Grid.Column="2" Text="{Binding Filters.SphereRadius}" Watermark="Radius" />
    </Grid>
    <Grid Grid.Column="0" Grid.Row="3" ColumnDefinitions="Auto, 8, Auto, 12, Auto, 8, Auto, *, Auto, 8, Auto"
          Margin="4 0 0 4">
      <TextBlock Grid.Column="0" VerticalAlignment="Center" Foreground="LightGray">Brush</TextBlock>
      <CheckBox Grid.Column="2" IsChecked="{Binding Filters.ShowBrushEntities}" />
      <TextBlock Grid.Column="4" VerticalAlignment="Center" Foreground="LightGray">Point</TextBlock>
      <CheckBox Grid.Column="6" IsChecked="{Binding Filters.ShowPointEntities}" />
      <TextBlock Grid.Column="8" Foreground="LightGray" VerticalAlignment="Center">Wildcard Wrapping</TextBlock>
      <CheckBox Grid.Column="10" IsChecked="{Binding Filters.WildcardWrapping}" Padding="0" />
    </Grid>
    <Grid Grid.Column="0" Grid.Row="4" Margin="4 0 0 8" ColumnDefinitions="Auto, *, Auto">
      <TextBlock Grid.Column="0" FontStyle="Italic" Foreground="LightGray" VerticalAlignment="Center"
                 FontFamily="{StaticResource Monospace}" IsVisible="{Binding IsFiltered}">
        <TextBlock.Text>
          <MultiBinding StringFormat="\{0\} / \{1\} entities">
            <Binding Path="FilteredEntities.Count" FallbackValue="0" />
            <Binding Path="EntityLumpViewModel.EntityCount" FallbackValue="" />
          </MultiBinding>
        </TextBlock.Text>
      </TextBlock>
      <TextBlock Grid.Column="0" FontStyle="Italic" Foreground="LightGray" IsVisible="{Binding !IsFiltered}"
                 VerticalAlignment="Center" FontFamily="{StaticResource Monospace}"
                 Text="{Binding EntityLumpViewModel.EntityCount, StringFormat='\{0\} entities', FallbackValue=''}" />
      <Button Grid.Column="2" Command="{Binding EntityLumpViewModel.AddEmptyEntity, FallbackValue=''}"
              HorizontalAlignment="Right" IsEnabled="{Binding BspService.HasLoadedBsp}" Padding="0"
              ToolTip.Tip="Add Entity">
        <materialIcons:MaterialIcon Kind="Plus" Width="20" Height="20" />
      </Button>
    </Grid>
    <Border Grid.Column="0" Grid.Row="5" CornerRadius="4">
      <ListBox Name="EntityList" ItemsSource="{Binding FilteredEntities}"
               SelectionChanged="EntityList_OnSelectionChanged"
               SelectionMode="Single" Background="#08FFFFFF" CornerRadius="4" Classes="ScrollThin"
               ScrollViewer.AllowAutoHide="False">
        <ListBox.Styles>
          <Style Selector="ListBoxItem">
            <Setter Property="Padding" Value="8 4 8 4" />
          </Style>
        </ListBox.Styles>
        <ListBox.ItemTemplate>
          <DataTemplate>
            <Grid ColumnDefinitions="Auto, 4, Auto, *, Auto">
              <Grid.Styles>
                <Style Selector="TextBlock">
                  <Setter Property="FontFamily" Value="{StaticResource Monospace}" />
                </Style>
              </Grid.Styles>
              <TextBlock Grid.Column="0" Text="{Binding Classname}" />
              <TextBlock Grid.Column="2" Text="*" IsVisible="{Binding IsModified}" />
              <Button Grid.Column="4"
                      Command="{Binding ViewModel.EntityLumpViewModel.RemoveEntity, RelativeSource={RelativeSource AncestorType=views:EntityEditorView}}"
                      CommandParameter="{Binding}"
                      HorizontalAlignment="Right"
                      Background="Transparent" BorderBrush="Transparent" Padding="0">
                <materialIcons:MaterialIcon Kind="Delete" />
              </Button>
            </Grid>
          </DataTemplate>
        </ListBox.ItemTemplate>
      </ListBox>
    </Border>
    <GridSplitter Grid.Column="1" Margin="8, 0" Grid.Row="0" Grid.RowSpan="6" MinWidth="1" Width="1"
                  ResizeDirection="Columns" />
    <TabControl Grid.Column="2" Grid.Row="0" Grid.RowSpan="6" Padding="0" ItemsSource="{Binding Tabs}"
                SelectedItem="{Binding SelectedTab}">
      <TabControl.Styles>
        <Style Selector="TabItem">
          <Setter Property="Margin" Value="0 -2 0 4" />
        </Style>
      </TabControl.Styles>
      <TabControl.ItemTemplate>
        <DataTemplate>
          <StackPanel Orientation="Horizontal" Spacing="4">
            <TextBlock Text="{Binding ((entity:EntityViewModel)Entity).Classname}" />
            <Panel IsVisible="{Binding Entity.IsModified}" ToolTip.Tip="Modified, BSP needs saving!">
              <materialIcons:MaterialIcon Kind="Asterisk" />
            </Panel>
            <ToggleButton
              Command="{Binding ViewModel.TogglePinnedTab, RelativeSource={RelativeSource AncestorType=views:EntityEditorView}}"
              IsChecked="{Binding IsPinned}" CommandParameter="{Binding}" BorderThickness="0"
              ToolTip.Tip="Pin tab">
              <materialIcons:MaterialIcon Kind="Pin" />
            </ToggleButton>
            <Button
              Command="{Binding ViewModel.CloseTab, RelativeSource={RelativeSource AncestorType=views:EntityEditorView}}"
              CommandParameter="{Binding}" BorderThickness="0">
              <materialIcons:MaterialIcon Kind="Close" />
            </Button>
          </StackPanel>
        </DataTemplate>
      </TabControl.ItemTemplate>
      <TabControl.DataTemplates>
        <DataTemplate DataType="vm:EntityEditorTabViewModel">
          <ScrollViewer AllowAutoHide="False" VerticalScrollBarVisibility="Visible" Padding="0 0 4 0">
            <StackPanel Orientation="Vertical" Spacing="4">
              <ItemsControl ItemsSource="{Binding Entity.Properties}">
                <ItemsControl.DataTemplates>
                  <DataTemplate DataType="entity:EntityPropertyStringViewModel">
                    <Grid ColumnDefinitions="*, 4, 3*, 4, 32" Height="32" Margin="0 0 0 4">
                      <TextBox Text="{Binding Key}" />
                      <TextBox Text="{Binding Value}" Grid.Column="2" />
                      <Button Command="{Binding Delete}" Grid.Column="4" Height="32">
                        <materialIcons:MaterialIcon Kind="Delete" />
                      </Button>
                    </Grid>
                  </DataTemplate>
                  <DataTemplate DataType="entity:EntityPropertyIoViewModel">
                    <Grid RowDefinitions="32, 4, 32, 4, 32, 4, 32, 4, 32, 4, 32, 4"
                          ColumnDefinitions="*, 4, 32, 4, 3* ">
                      <Grid.Styles>
                        <Style Selector="TextBlock">
                          <Setter Property="VerticalAlignment" Value="Center" />
                          <Setter Property="FontFamily"
                                  Value="{StaticResource Monospace}" />
                        </Style>
                      </Grid.Styles>
                      <TextBox Text="{Binding Key}" Grid.Row="0" Grid.Column="0" />
                      <Button Command="{Binding Delete}" Grid.Row="0" Grid.Column="2" Height="32">
                        <materialIcons:MaterialIcon Kind="Delete" />
                      </Button>
                      <TextBlock Text="Target Entity Name" Grid.Row="2" Grid.Column="0" />
                      <TextBox Text="{Binding TargetEntityName}" Grid.Row="2" Grid.Column="2"
                               Grid.ColumnSpan="3" />
                      <TextBlock Text="Input" Grid.Row="4" Grid.Column="0" />
                      <TextBox Text="{Binding Input}" Grid.Row="4" Grid.Column="2"
                               Grid.ColumnSpan="3" />
                      <TextBlock Text="Parameter" Grid.Row="6" Grid.Column="0" />
                      <TextBox Text="{Binding Parameter}" Grid.Row="6" Grid.Column="2"
                               Grid.ColumnSpan="3" />
                      <TextBlock Text="Delay" Grid.Row="8" Grid.Column="0" />
                      <NumericUpDown Value="{Binding Delay}" Grid.Row="8" Grid.Column="2"
                                     Grid.ColumnSpan="3" />
                      <TextBlock Text="TimesToFire" Grid.Row="10" Grid.Column="0" />
                      <NumericUpDown Value="{Binding TimesToFire}" Grid.Row="10" Grid.Column="2"
                                     Grid.ColumnSpan="3" />
                    </Grid>
                  </DataTemplate>
                </ItemsControl.DataTemplates>
              </ItemsControl>
              <StackPanel Orientation="Horizontal" Spacing="4">
                <Button Command="{Binding Entity.AddString}">Add KeyValue</Button>
                <Button Command="{Binding Entity.AddIo}">Add IO</Button>
              </StackPanel>
            </StackPanel>
          </ScrollViewer>
        </DataTemplate>
      </TabControl.DataTemplates>
    </TabControl>
    <Button Grid.Column="0" Grid.Row="0" IsVisible="false" Command="{Binding CloseSelectedTab}" HotKey="Ctrl+W" />
  </Grid>
</UserControl>
